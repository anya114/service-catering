<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="build.dream.catering.mappers.CanNotOperateReasonMapper">
    <insert id="insert" parameterType="build.dream.common.erp.catering.domains.CanNotOperateReason" useGeneratedKeys="true" keyProperty="id">
        ${@build.dream.common.utils.DatabaseUtils@generateInsertSql("build.dream.common.erp.catering.domains.CanNotOperateReason")}
    </insert>

    <insert id="insertAll" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        <bind name="sql" value="@build.dream.common.utils.DatabaseUtils@generateInsertAllSql('build.dream.common.erp.catering.domains.CanNotOperateReason')"></bind>
        ${sql[0]}
        <foreach collection="list" index="index" item="item" separator=",">
            ${sql[1]}
        </foreach>
    </insert>

    <select id="find" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.erp.catering.domains.CanNotOperateReason">
        SELECT * FROM can_not_operate_reason <include refid="build.dream.catering.mappers.CommonMapper.searchConditionSql"></include> LIMIT 0, 1
    </select>

    <delete id="delete" parameterType="build.dream.common.utils.SearchModel">
        DELETE FROM can_not_operate_reason <include refid="build.dream.catering.mappers.CommonMapper.searchConditionSql"></include>
    </delete>
</mapper>